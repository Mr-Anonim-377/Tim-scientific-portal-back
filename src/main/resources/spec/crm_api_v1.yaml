openapi: 3.0.1
info:
  title: SRM API
  description: 'Api для управления модулями страницы их стилями и контентом'
  version: 1.0.0
servers:
  - url: 'http://{host}:{port}'
    variables:
      "host":
        enum:
          - "193.232.106.89"
        default: "193.232.106.89"
      "port":
        "enum":
          - "81"
        "default": "81"
paths:

  /crm/v1/page/types:
    get:
      operationId: getPageTypes
      summary: Получение типов страниц портала
      description: 'Получение всех типов страниц'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/modules/types:
    get:
      operationId: getModuleTypes
      summary: Получение типов одулей
      description: 'Получение всех типов страниц'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/modules/objects/types:
    get:
      operationId: getObjectTypes
      summary: Получение типов объектов модулей
      description: 'Получение всех типов страниц'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/modules/objects/contents/types:
    get:
      operationId: getContentTypes
      summary: Получение типов контента
      description: 'Получение всех типов страниц'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/byId:
    get:
      operationId: getPageByPageId
      parameters:
        - name: pageId
          schema:
            type: string
            format: uuid
            description: Идетификатор Страницы
          in: query
      summary: Получение страницы по ее идентификатору
      description: 'Получение страницы по ее идентификатору
      (идентификатор активности и даты создания не валиден в данном методе)'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/all:
    get:
      summary: Получение всех страниц
      operationId: getAllPage
      description: 'Получение всех страниц портала'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pages'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/byType:
    get:
      operationId: getPageByPageType
      parameters:
        - name: pageType
          in: query
          schema:
            type: string
            default: 'MAIN_PAGE'
            description: Тип страницы
      summary: Получение модулей страницы по типу страницы
      description: Получение моделуй страницы по type и по active - true.
        Если страниц с данными атрибутами несколько, сервером будет отдана информация о последнем созданном модуле
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/filter/byPageData:
    get:
      operationId: getPageByPageTypeAndFilters
      parameters:
        - name: pageType
          in: query
          schema:
            type: string
            default: 'MAIN_PAGE'
            description: Тип страницы
        - in: query
          name: key
          schema:
            type: string
            description: Названия поля, по которому будет идти фильтрация
        - in: query
          name: value
          schema:
            type: string
            description: Значение по которому будет идти фильтрация
      summary: Получение модулей страницы по типу страницы и с применением фильтрации
      description: Получение модулей страницы по type и по active - true и с применением фильтрации по переданных данным
        Если страниц с данными атрибутами несколько, сервером будет отдана информация о последней созданной странице
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/modules/objects:
    get:
      operationId: getModulesObjectByModuleId
      parameters:
        - name: moduleId
          in: query
          schema:
            type: string
            format: uuid
            description: Идентификатор модуля
      summary: Получение обьектов конкретного модуля
      description: Получение обьектов по идентификатора модуля на странице
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModulesObjects'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /crm/v1/page/modules/objects/byTag:
    get:
      operationId: getModulesObjectByModuleIdAndByTag
      parameters:
        - name: moduleId
          in: query
          schema:
            type: string
            format: uuid
            description: Идентификатор модуля
        - name: tag
          in: query
          schema:
            type: string
            description: Тэг для деления на группы
      summary: Получение обьектов конкретного модуля по тегу
      description: Получение обьектов по идентификатора модуля и тегу на странице
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModulesObjects'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'


  /crm/v1/page/modules/objets/contents:
    get:
      operationId: getContentByModulesObjectId
      parameters:
        - name: objectId
          in: query
          schema:
            type: string
            format: uuid
            description: Идентификатор объекта
      summary: Получение контента по идентификатору обьекта модуля на странице
      description: Получение контента по идентификатору обьекта модуля на странице
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contents'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /utils/ping:
    get:
      operationId: getPing
      summary: Сервисный метод работоспособности сервиса
      description: 'Сервисный метод - проверка работы сервиса,
      если сервис функционирует, возврашает в отете слово pong'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong

  /user/createByComand:
    post:
      operationId: createByComand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommandMetaDates"
      summary: Создание сущностей
      description: Создание сущностей с использованием предописанных команд
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'



components:
  schemas:
    #   ------Page
    Page:
      description: Страница портала
      required:
        - id
        - pageType
        - active
        - createdAt
        - childPage
        - name
        - modules
      properties:
        id:
          type: string
          format: uuid
        pageType:
          type: string
        active:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
        name:
          type: string
        modules:
          $ref: "#/components/schemas/Modules"
        byPageData:
          type: object
        childPage:
          $ref: '#/components/schemas/Pages'

    Pages:
      description: Массив Обьектов модуля
      type: array
      items:
        $ref: '#/components/schemas/Page'

    #    ------Module
    Modules:
      description: Массив модулей страницы
      type: array
      items:
        $ref: '#/components/schemas/Module'

    Module:
      description: Модуль страницы
      required:
        - id
        - rank
        - createdAt
        - moduleType
        - name
        - objectCount
      properties:
        id:
          type: string
          format: uuid
        rank:
          type: integer
        createdAt:
          type: string
          format: date-time
        moduleType:
          type: string
        name:
          type: string
        object_count:
          type: integer

    #    ------ModulesObject
    ModulesObjects:
      description: Массив Обьектов модуля
      type: array
      items:
        $ref: '#/components/schemas/ModulesObject'

    ModulesObject:
      description: Обьект модуля
      required:
        - id
        - objectType
        - objectRank
        - pageLink
        - name
        - childModuleObject
        - tag
        - stule
      properties:
        id:
          type: string
          format: uuid
        objectType:
          type: string
        objectRank:
          type: integer
        pageLink:
          type: string
          format: uuid
        name:
          type: string
        tag:
          type: string
        contents:
          $ref: '#/components/schemas/Contents'
        childModuleObject:
          $ref: '#/components/schemas/ModulesObjects'

    #    ------Content
    Contents:
      description: Массив контента обьектов модулей страницы
      type: array
      items:
        $ref: '#/components/schemas/Content'

    Content:
      description: Контент обьекта модуля страницы
      required:
        - id
        - name
        - contentType
        - value
      properties:
        id:
          type: string
          format: uuid
        contentType:
          type: string
        name:
          type: string
        value:
          type: object
          format: json

    #    ------Types
    Types:
      description: Массив типов страниц, модулей. обьектов, контента
      type: array
      items:
        type: string

    #     -----Errors
    ApiError:
      description: Дефолтная ошибка работы rest сервиса
      type: object
      required:
        - errorType
        - errorTitle
        - date
      properties:
        errorType:
          type: string
          default: "InternalServerError"
        errorTitle:
          type: string
          default: "Don't works rest service"
        date:
          type: string

    CommandMetaDates:
      description: Метаданные для запуска команды создания сущностей
      type: array
      items:
        $ref: '#/components/schemas/ContentValue'

    ContentValue:
      description: Сушность массива метаданных - одна унраная единица
      type: object
      properties:
        ket:
          type: string
        value:
          type: string